---
http_interactions:
- request:
    method: get
    uri: http://localhost:9292/podcast/24a970fdda68488abe659cfe15ae974c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '29773'
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Connection:
      - keep-alive
      Server:
      - thin
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 30 Jul 2020 05:26:27 GMT
- request:
    method: get
    uri: http://localhost:9292/podcast/24a970fdda68488abe659cfe15ae974c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '29773'
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Connection:
      - keep-alive
      Server:
      - thin
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 30 Jul 2020 05:26:28 GMT
recorded_with: VCR 6.0.0
